// Hover effect
@mixin hover-opacity() {
  opacity: 1;
  transition: $transition-default;

  &:hover {
    opacity: 0.8;
  }
}

// Pseudo
@mixin pseudo($display: block, $pos: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $pos;
}

// Responsive image ratio
@mixin responsive-ratio($x,$y, $pseudo: false) {
  $padding: unquote( ( $y / $x ) * 100 + '%' );
  @if $pseudo {
    &:before {
      @include pseudo($pos: relative);
      width: 100%;
      padding-top: $padding;
    }
  } @else {
    padding-top: $padding;
  }
}

// Hidden button
@mixin button-hidden($is-icon: true) {
  background: transparent;
  border: 0 none;

  @if $is-icon {
    line-height: 0;
  }
}

// Create stack-space
// @param  {Number} stack-space to set
@mixin stack-space($value) {
  margin-bottom: $value;
  &:last-child {
    margin-bottom: 0;
  }
}

// Create inline-space
// @param  {Number} inline-space to set
@mixin inline-space($value) {
  margin-right: $value;
  &:last-child {
    margin-right: 0;
  }
}

// Saving 4 lines of code every time you use flex.
@mixin display-flex($direction, $justify, $align, $display: flex) {
  display: $display;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// Saving 4 lines of code every time you use grid.
@mixin display-grid($columns: 12, $column-gap: 32px, $row-gap: 32px) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  grid-column-gap: $column-gap;
  grid-row-gap: $row-gap;
}
